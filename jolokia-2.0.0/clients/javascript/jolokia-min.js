"use strict";(function(root,factory){if(typeof define==="function"&&define.amd){define(["jquery"],factory);}else if(typeof module==="object"&&module.exports){var jquery=require("jquery");if(typeof jquery.fn!=="undefined"){module.exports=factory(jquery);}else{var jsdom=require("jsdom");var dom=new jsdom.JSDOM("");module.exports=factory(jquery(dom.window));}}else{root.Jolokia=factory(root.jQuery);}}(typeof self!=="undefined"?self:this,function(jQuery){var _jolokiaConstructorFunc=function($){var DEFAULT_CLIENT_PARAMS={type:"POST",jsonp:false};var GET_AJAX_PARAMS={type:"GET"};var POST_AJAX_PARAMS={type:"POST",processData:false,dataType:"json",contentType:"text/json"};var PROCESSING_PARAMS=["maxDepth","maxCollectionSize","maxObjects","ignoreErrors","canonicalNaming","serializeException","includeStackTrace","ifModifiedSince"];function Jolokia(param){if(typeof this==="undefined"){return new Jolokia(param);}
this.CLIENT_VERSION="2.0.0";var jobs=[];var client=null;var agentOptions={};var pollerIsRunning=false;var jolokia=this;if(typeof param==="string"){param={url:param};}
Jolokia.assignObject(agentOptions,DEFAULT_CLIENT_PARAMS,param);jolokia.request=function(request,params){var opts=mergeInDefaults(params);assertNotNull(opts.url,"No URL given");var ajaxParams={};["username","password","timeout"].forEach(function(key){if(opts[key]){ajaxParams[key]=opts[key];}});if(ajaxParams['username']&&ajaxParams['password']){if(window.btoa){ajaxParams.beforeSend=function(xhr){var tok=ajaxParams['username']+':'+ajaxParams['password'];xhr.setRequestHeader('Authorization',"Basic "+window.btoa(tok));};}
ajaxParams.xhrFields={withCredentials:true};}
if(extractMethod(request,opts)==="post"){Jolokia.assignObject(ajaxParams,POST_AJAX_PARAMS);ajaxParams.data=JSON.stringify(request);ajaxParams.url=ensureTrailingSlash(opts.url);}else{Jolokia.assignObject(ajaxParams,GET_AJAX_PARAMS);ajaxParams.dataType=opts.jsonp?"jsonp":"json";ajaxParams.url=opts.url+"/"+constructGetUrlPath(request);}
ajaxParams.url=addProcessingParameters(ajaxParams.url,opts);if(opts.ajaxError){ajaxParams.error=opts.ajaxError;}
if(opts.success){var success_callback=constructCallbackDispatcher(opts.success);var error_callback=constructCallbackDispatcher(opts.error);ajaxParams.success=function(data){var responses=Array.isArray(data)?data:[data];for(var idx=0;idx<responses.length;idx++){var resp=responses[idx];if(Jolokia.isError(resp)){error_callback(resp,idx);}else{success_callback(resp,idx);}}};$.ajax(ajaxParams);return null;}else{if(opts.jsonp){throw Error("JSONP is not supported for synchronous requests");}
ajaxParams.async=false;var xhr=$.ajax(ajaxParams);if(httpSuccess(xhr)){return JSON.parse(xhr.responseText);}else{return null;}}};jolokia.register=function(){if(arguments.length<2){throw"At a least one request must be provided";}
var callback=arguments[0],requests=Array.prototype.slice.call(arguments,1),job;if(typeof callback==='object'){if(callback.success&&callback.error){job={success:callback.success,error:callback.error};}else if(callback.callback){job={callback:callback.callback};}else{throw"Either 'callback' or ('success' and 'error') callback must be provided "+"when registering a Jolokia job";}
job=Jolokia.assignObject(job,{config:callback.config,onlyIfModified:callback.onlyIfModified});}else if(typeof callback==='function'){job={success:null,error:null,callback:callback};}else{throw"First argument must be either a callback func "+"or an object with 'success' and 'error' attributes";}
if(!requests){throw"No requests given";}
job.requests=requests;return addJob(job);};jolokia.unregister=function(handle){if(handle<jobs.length){delete jobs[handle];}};jolokia.jobs=function(){var ret=[],len=jobs.length;for(var i=0;i<len;i++){if(jobs[i]){ret.push(i);}}
return ret;};jolokia.start=function(interval){interval=interval||agentOptions.fetchInterval||30000;if(pollerIsRunning){if(interval===agentOptions.fetchInterval){return;}
jolokia.stop();}
agentOptions.fetchInterval=interval;jolokia.timerId=setInterval(callJolokia(jolokia,jobs),interval);pollerIsRunning=true;};jolokia.stop=function(){if(!pollerIsRunning&&jolokia.timerId!=undefined){return;}
clearInterval(jolokia.timerId);jolokia.timerId=null;pollerIsRunning=false;};jolokia.isRunning=function(){return pollerIsRunning;};jolokia.addNotificationListener=function(opts){ensureNotificationRegistration();var mode=extractNotificationMode(opts);notificationHandlerFunc("lazy-init",mode)();var resp=jolokia.request({type:"notification",command:"add",mode:mode,client:client.id,mbean:opts.mbean,filter:opts.filter,config:opts.config,handback:opts.handback});if(Jolokia.isError(resp)){throw new Error("Cannot not add notification subscription for "+opts.mbean+" (client: "+client.id+"): "+resp.error);}
var handle={id:resp.value,mode:mode};notificationHandlerFunc("add",mode)(handle,opts);return handle;};jolokia.removeNotificationListener=function(handle){notificationHandlerFunc("remove",handle.mode)(handle);jolokia.request({type:"notification",command:"remove",client:client.id,handle:handle.id});};jolokia.unregisterNotificationClient=function(){var backends=client.backend||{};for(mode in NOTIFICATION_HANDLERS){if(NOTIFICATION_HANDLERS.hasOwnProperty(mode)&&backends[mode]){notificationHandlerFunc("unregister")()}}
jolokia.request({type:"notification",command:"unregister",client:client.id});};function mergeInDefaults(params){return Jolokia.assignObject({},agentOptions,params);}
function addJob(job){var idx=jobs.length;jobs[idx]=job;return idx;}
function ensureNotificationRegistration(){if(!client){var resp=jolokia.request({type:"notification",command:"register"});if(Jolokia.isError(resp)){throw new Error("Can not register client for notifications: "+resp.error+"\nTrace:\n"+resp.stacktrace);}else{client=resp.value;}}}
function extractNotificationMode(opts){var backends=client.backend||{};var mode=opts.mode;if(!mode){mode=backends["sse"]?"sse":(backends["pull"]?"pull":undefined);if(!mode&&backends.length==1){return backends[0];}}
if(!mode||!backends[mode]){throw new Error("Notification mode must be one of "+Object.keys(backends)+(mode?" and not "+mode:""));}
return mode}
function notificationHandlerFunc(what,mode){var notifHandler=NOTIFICATION_HANDLERS[mode];if(!notifHandler){throw new Error("Unsupported notification mode '"+mode+"'");}
return function(){return notifHandler[what].apply(notifHandler,Array.prototype.slice.call(arguments));}}
var NOTIFICATION_HANDLERS={pull:{add:function(handle,opts){var job={callback:function(resp){if(!Jolokia.isError(resp)){var notifs=resp.value;if(notifs&&notifs.notifications&&notifs.notifications.length>0){opts.callback(notifs);}}},requests:[{type:"exec",mbean:client.backend.pull.store,operation:"pull",arguments:[client.id,handle.id]}]};this.jobIds[handle.id]=addJob(job);},remove:function(handle){var job=this.jobIds[handle.id];if(job){jolokia.unregister(job);delete this.jobIds[handle.id];}},unregister:function(){for(var handleId in this.jobIds){if(this.jobIds.hasOwnProperty(handleId)){var jobId=this.jobIds[handleId];jolokia.unregister(jobId);}}
this.jobIds={}},jobIds:{}},sse:{"lazy-init":function(){if(!this.eventSource){this.eventSource=new EventSource(agentOptions.url+"/notification/open/"+client.id+"/sse");var dispatcher=this.dispatchMap;this.eventSource.addEventListener("message",function(event){var data=JSON.parse(event.data);var callback=dispatcher[data.handle];if(callback!=null){callback(data);}});}},add:function(handle,opts){this.dispatchMap[handle.id]=opts.callback;},remove:function(handle){delete this.dispatchMap[handle.id];},unregister:function(){this.dispatchMap={};this.eventSource=null;},dispatchMap:{},eventSource:null}};}
function callJolokia(jolokia,jobs){return function(){var errorCbs=[],successCbs=[],i,j;var requests=[];for(i in jobs){if(!jobs.hasOwnProperty(i)){continue;}
var job=jobs[i];var reqsLen=job.requests.length;if(job.success){var successCb=cbSuccessClosure(job,i);var errorCb=cbErrorClosure(job,i);for(j=0;j<reqsLen;j++){requests.push(prepareRequest(job,j));successCbs.push(successCb);errorCbs.push(errorCb);}}else{var callback=cbCallbackClosure(job,jolokia);for(j=0;j<reqsLen-1;j++){requests.push(prepareRequest(job,j));successCbs.push(callback.cb);errorCbs.push(callback.cb);}
requests.push(prepareRequest(job,reqsLen-1));successCbs.push(callback.lcb);errorCbs.push(callback.lcb);}}
var opts={success:function(resp,j){return successCbs[j].apply(jolokia,[resp,j]);},error:function(resp,j){return errorCbs[j].apply(jolokia,[resp,j]);}};return jolokia.request(requests,opts);};}
function prepareRequest(job,idx){var request=job.requests[idx],config=job.config||{},extra=job.onlyIfModified&&job.lastModified?{ifModifiedSince:job.lastModified}:{};request.config=Jolokia.assignObject({},config,request.config,extra);return request;}
function cbCallbackClosure(job,jolokia){var responses=[],callback=job.callback,lastModified=0;return{cb:addResponse,lcb:function(resp,j){addResponse(resp);if(responses.length>0){job.lastModified=lastModified;callback.apply(jolokia,responses);}}};function addResponse(resp,j){if(resp.status!=304){if(lastModified==0||resp.timestamp<lastModified){lastModified=resp.timestamp;}
responses.push(resp);}}}
function cbErrorClosure(job,i){var callback=job.error;return function(resp,j){if(resp.status==304){return;}
if(callback){callback(resp,i,j)}}}
function cbSuccessClosure(job,i){var callback=job.success;return function(resp,j){if(callback){if(job.onlyIfModified){job.lastModified=resp.timestamp;}
callback(resp,i,j)}}}
function constructCallbackDispatcher(callback){if(callback==null){return function(response){console.warn("Ignoring response "+JSON.stringify(response));};}else if(callback==="ignore"){return function(){};}
var callbackArray=Array.isArray(callback)?callback:[callback];return function(response,idx){callbackArray[idx%callbackArray.length](response,idx);}}
function extractMethod(request,opts){var methodGiven=opts&&opts.method?opts.method.toLowerCase():null,method;if(methodGiven){if(methodGiven==="get"){if(Array.isArray(request)){throw new Error("Cannot use GET with bulk requests");}
if(request.type.toLowerCase()==="read"&&Array.isArray(request.attribute)){throw new Error("Cannot use GET for read with multiple attributes");}
if(request.target){throw new Error("Cannot use GET request with proxy mode");}
if(request.config){throw new Error("Cannot use GET with request specific config");}}
method=methodGiven;}else{method=Array.isArray(request)||request.config||(request.type.toLowerCase()==="read"&&Array.isArray(request.attribute))||request.target?"post":"get";}
if(opts.jsonp&&method==="post"){throw new Error("Can not use JSONP with POST requests");}
return method;}
function addProcessingParameters(url,opts){var sep=url.indexOf("?")>0?"&":"?";PROCESSING_PARAMS.forEach(function(key){if(opts[key]!=null){url+=sep+key+"="+opts[key];sep="&";}});return url;}
function constructGetUrlPath(request){var type=request.type;assertNotNull(type,"No request type given for building a GET request");type=type.toLowerCase();var extractor=GET_URL_EXTRACTORS[type];assertNotNull(extractor,"Unknown request type "+type);var result=extractor(request);var parts=result.parts||[];var url=type;parts.forEach(function(v){url+="/"+Jolokia.escape(v)});if(result.path){url+=(result.path[0]=='/'?"":"/")+result.path;}
return url;}
function ensureTrailingSlash(url){return url.replace(/\/*$/,"/");}
var GET_URL_EXTRACTORS={"read":function(request){if(request.attribute==null){return{parts:[request.mbean,'*'],path:request.path};}else{return{parts:[request.mbean,request.attribute],path:request.path};}},"write":function(request){return{parts:[request.mbean,request.attribute,valueToString(request.value)],path:request.path};},"exec":function(request){var ret=[request.mbean,request.operation];if(request.arguments&&request.arguments.length>0){request.arguments.forEach(function(value){ret.push(valueToString(value));});}
return{parts:ret};},"version":function(){return{};},"search":function(request){return{parts:[request.mbean]};},"list":function(request){return{path:request.path};},"notification":function(request){switch(request.command){case"register":return{parts:["register"]};case"add":var ret=["add",request.client,request.mode,request.mbean];var extra=[];if(request.handback){extra.push(valueToString(request.handback));}
if(request.config){extra.push(valueToString(request.config));}else if(extra.length){extra.push("{}");}
if(request.filter){extra.push(valueToString(request.filter));}else if(extra.length){extra.push(" ");}
return{parts:ret.concat(extra.reverse())};case"remove":return{parts:["remove",request.client,request.handle]};case"unregister":return{parts:["unregister",request.client]};case"list":return{parts:["list",request.client]};case"ping":return{parts:["ping",request.client]};}
throw new Error("Unknown command '"+request.command+"'");}};function valueToString(value){if(value==null){return"[null]";}
if(Array.isArray(value)){var ret="";for(var i=0;i<value.length;i++){ret+=value==null?"[null]":singleValueToString(value[i]);if(i<value.length-1){ret+=",";}}
return ret;}else{return singleValueToString(value);}}
function singleValueToString(value){if(typeof value==="string"&&value.length==0){return"\"\"";}else{return value.toString();}}
function httpSuccess(xhr){try{return!xhr.status&&location.protocol==="file:"||xhr.status>=200&&xhr.status<300||xhr.status===304||xhr.status===1223;}catch(e){}
return false;}
function assertNotNull(object,message){if(object==null){throw new Error(message);}}
Jolokia.prototype.escape=Jolokia.escape=function(part){return encodeURIComponent(part.replace(/!/g,"!!").replace(/\//g,"!/"));};Jolokia.prototype.isError=Jolokia.isError=function(resp){return resp.status==null||resp.status!=200;};Jolokia.prototype.assignObject=Jolokia.assignObject=function(){var target=arguments[0]
var sources=Array.prototype.slice.call(arguments,1);if(target===undefined||target===null){throw new Error("Cannot assign object to undefined or null");}
sources.forEach(function(source){if(source===undefined||source===null){return;}
Object.keys(source).forEach(function(key){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}});})
return target;}
return Jolokia;};return _jolokiaConstructorFunc(jQuery);}));